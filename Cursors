--------------------------------------------------------------------
-- cursor more than one row
--------------------------------------------------------------------

declare
cursor c1 is select first_name from hr.employees where employee_id >151;
f_name varchar2(50);

begin
open c1;
loop
fetch c1 into f_name;
exit when c1%notfound;
DBMS_OUTPUT.PUT_LINE(f_name);
end loop;
close c1;
end;

--------------------------------------------------------------------
--cursor with records
--------------------------------------------------------------------

declare
cursor c1 is select first_name, salary from hr.employees where employee_id >151;

c_rec c1%rowtype;

begin
open c1;
loop
fetch c1 into c_rec;
exit when c1%notfound;
DBMS_OUTPUT.PUT_LINE(c_rec.first_name);
DBMS_OUTPUT.PUT_LINE(c_rec.salary);
end loop;
close c1;
end;

--------------------------------------------------------------------
--impicit cursors
--------------------------------------------------------------------
declare
si_cnt number;
si_name varchar2(25);
begin
select first_name into si_name from employees where employee_id=1210;
si_cnt := sql%rowcount;

dbms_output.put_line(si_cnt || ' row found');
end;




--------------------------------------------------------------------
--reference cursors
--------------------------------------------------------------------

declare
TYPE rcrd_type is RECORD (
id number,
name varchar2(500),
salary number
);

emp_info_rec rcrd_type;

TYPE si_cur is REF CURSOR;

si_cursor si_cur;
begin
open si_cursor for 'select id, name, salary from emp_test';
loop
    fetch si_cursor INTO emp_info_rec;
    exit WHEN si_cursor%notfound;
    
    dbms_output.put_line(emp_info_rec.id);
    dbms_output.put_line(emp_info_rec.name);
    dbms_output.put_line(emp_info_rec.salary);
    dbms_output.put_line('----------------');
    
end loop;
end;

--------------------------------------------------------------------
--reference cursors function and procedure
--------------------------------------------------------------------

create or replace function get_names(
emp_id in number
)
return SYS_REFCURSOR is
n_return SYS_REFCURSOR;
begin
open n_return
for select first_name, last_name from employees where employee_id =emp_id;
return n_return;

end;




create or replace procedure display_names 
is
f_name varchar2(50);
l_name varchar2(50);
c_rec SYS_REFCURSOR;
begin

c_rec := get_names(115);
loop 
fetch c_rec into f_name, l_name;
dbms_output.put_line(f_name);
dbms_output.put_line(l_name);
exit when c_rec%notfound;
end loop;
close c_rec;

end;


exec display_names;

select * from employees where employee_id=115
